plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.7'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.f17coders'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// QueryDSL 설정
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
//	testImplementation 'org.springframework.security:spring-security-test'
	// jwt
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'javax.xml.bind:jaxb-api:2.3.1' // jdk 8이상 필요
	// gson
	implementation 'com.google.code.gson:gson:2.9.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// mySql 연결
	runtimeOnly 'com.mysql:mysql-connector-j'
	implementation group: 'org.javassist', name: 'javassist', version: '3.15.0-GA'
	// db
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	// https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'

	// mongodb
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	// websocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
}



tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 설정
def generatedDir = 'build/generated'

clean {
	delete file (generatedDir)
}